{
  "name": "pleiades",
  "version": "0.0.6",
  "description": "Restful routing",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "amqp": "~0.2.0",
    "amqplib": "~0.2.1",
    "async": "~0.9.0",
    "body-parser": "~1.6.5",
    "colors": "~1.0.2",
    "express-validator": "~2.3.0",
    "halson": "~2.2.0",
    "mysql": "~2.4.3",
    "orm": "~2.1.19",
    "request": "~2.40.0",
    "request-json": "~0.4.11",
    "sql-ddl-sync": "~0.1.4",
    "underscore": "1.6.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Jdecaudin/pleiades.git"
  },
  "keywords": [
    "express",
    "RESTful",
    "api",
    "HAL",
    "HATEOAS"
  ],
  "author": {
    "name": "Julien Decaudin"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Jdecaudin/pleiades/issues"
  },
  "readme": "pleiades\n========\n---\n\n[![NPM Version](https://img.shields.io/npm/v/pleiades.svg?style=flat)](https://www.npmjs.org/package/pleiades)\n[![Build Status](https://img.shields.io/travis/strongloop/pleiades.svg?style=flat)](https://travis-ci.org/strongloop/pleiades)\n\n---\n\nInstallation\n------------\n\n```\nnpm install express pleiades\n```\n\nUsage\n-----\n\n/app.js :\n\n```javascript\nvar app      = require('express')(),\n    pleiades = require('pleiades');\n\nvar settings = {\n  orm: \"mysql://user:password@localhost/database\",\n  objectsFolder: __dirname + '/objects',\n};\n\npleiades(app, settings, function() {\n  // All objects are loaded, start serveur\n  app.listen(8000);\n});\n\n```\n\nYou have just to replace :\n* your orm settings (based on [orm module](https://www.npmjs.org/package/orm))\n* the path to your objects directory\n\nWrite some objects to expose in your webservice (get some exemples in /exemples).\n\nThat's all !\n\nKnown issues\n------------\n\n* Deleting referenced objects (hasMany field) don't delete content on join table\n* You have to restart your server two times after join table creation\n\n@TODO\n-----\n\n* Tests\n* UI (to manage objects, to manage contents)\n* Be able to choose specific fields to get\n* Documentation generation based on objects's description\n* Content generation based on objects's description\n* Implements HAL ?\n\n... So help us ;-)\n\n---\n\nLicense\n=======\n\n---\n\nThis software is licensed under the MIT license.\n\nCopyright (c) 2014 Julien Decaudin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/Jdecaudin/pleiades",
  "_id": "pleiades@0.0.6",
  "_shasum": "fa9de991da4310486ee841ecedd60c787d1715be",
  "_from": "node_modules/pleiades/"
}
